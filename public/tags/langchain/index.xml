<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LangChain on 林林一说</title>
    <link>http://localhost:1313/tags/langchain/</link>
    <description>Recent content in LangChain on 林林一说</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 13 Jun 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/langchain/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LangChain使用函数调用（Function Call）</title>
      <link>http://localhost:1313/posts/langchain%E4%BD%BF%E7%94%A8%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8/</link>
      <pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/langchain%E4%BD%BF%E7%94%A8%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8/</guid>
      <description>什么是函数调用 顾名思义，就是使得我们的代码流程能调用函数。在某些地方，函数也作为工具，因此也称工具调用（Tool Calling）。函数调用中，LLM的难点在于根据用户query去选择哪个函数，以及对应</description>
    </item>
    <item>
      <title>Langchain-LCEL用法介绍</title>
      <link>http://localhost:1313/posts/langchain-lcel/</link>
      <pubDate>Wed, 17 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/langchain-lcel/</guid>
      <description>LCEL是LangChain引入的一种全新语法，LCEL全称为LangChain Expression Language，可以更方便地构建LLM的Pipeline。在LangChain中，LCEL支持异步、并行、流式等特点</description>
    </item>
    <item>
      <title>LangChain React Agent分析</title>
      <link>http://localhost:1313/posts/langchain-react-agent%E5%88%86%E6%9E%90/</link>
      <pubDate>Sat, 17 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/langchain-react-agent%E5%88%86%E6%9E%90/</guid>
      <description>LangChain 是一个开源库，它旨在使构建和部署与语言模型交互的应用程序变得更加容易。它的核心概念之一是 &amp;ldquo;Agent&amp;rdquo;，可以认为 Agent 是一个抽象层，代表了一个可以执行各种任务的实体。 LangChain 内置了多种</description>
    </item>
  </channel>
</rss>
