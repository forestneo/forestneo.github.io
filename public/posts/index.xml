<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 林林一说</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on 林林一说</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 Jul 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用Hugo构建个人主页</title>
      <link>http://localhost:1313/posts/%E4%BD%BF%E7%94%A8hugo%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/</link>
      <pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/%E4%BD%BF%E7%94%A8hugo%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/</guid>
      <description>碰到的问题：运行hugo server之后，在public/intex.html文件中，stylesheet的相关链接依然是localhost。这将导致部署到了github pages中之后，网站找不到对</description>
    </item>
    <item>
      <title>LLM/RAG如何进行意图识别（路由）</title>
      <link>http://localhost:1313/posts/llm%E6%84%8F%E5%9B%BE%E8%AF%86%E5%88%AB/</link>
      <pubDate>Fri, 14 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/llm%E6%84%8F%E5%9B%BE%E8%AF%86%E5%88%AB/</guid>
      <description>为什么需要进行意图识别 RAG 的召回、生成过程逻辑是不够灵活的，无法解决用户的所有问题。在实际过程中，RAG 更适合作为一个子流程。即业务中往往需要首先识别用户 query 中的意图，再进入不同的分支流程进行响应（如图：</description>
    </item>
    <item>
      <title>LangChain使用函数调用（Function Call）</title>
      <link>http://localhost:1313/posts/langchain%E4%BD%BF%E7%94%A8%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8/</link>
      <pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/langchain%E4%BD%BF%E7%94%A8%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8/</guid>
      <description>什么是函数调用 顾名思义，就是使得我们的代码流程能调用函数。在某些地方，函数也作为工具，因此也称工具调用（Tool Calling）。函数调用中，LLM的难点在于根据用户query去选择哪个函数，以及对应</description>
    </item>
    <item>
      <title>Advanced RAG 07</title>
      <link>http://localhost:1313/posts/advanced-rag-07/</link>
      <pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/advanced-rag-07/</guid>
      <description>有效解析和理解非结构化文档中的表格时，设计 RAG 方案仍然是一大挑战。以图片格式存在的表格情况下，这更困难，如扫描文件中的表格。这些挑战至少包含一下几个方面： 扫描文档或图像文档的复杂性，如多样化的结构、包含</description>
    </item>
    <item>
      <title>Langchain-LCEL用法介绍</title>
      <link>http://localhost:1313/posts/langchain-lcel/</link>
      <pubDate>Wed, 17 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/langchain-lcel/</guid>
      <description>LCEL是LangChain引入的一种全新语法，LCEL全称为LangChain Expression Language，可以更方便地构建LLM的Pipeline。在LangChain中，LCEL支持异步、并行、流式等特点</description>
    </item>
    <item>
      <title>RAG01-A Brief Introduction to RAG</title>
      <link>http://localhost:1313/posts/rag01-introduction/</link>
      <pubDate>Fri, 01 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/rag01-introduction/</guid>
      <description>本系列内容介绍 RAG 相关的概念，本文主要参考A Brief Introduction to Retrieval Augmented Generation 检索增强生成（RAG）简介 检索增强生成（Retrieval Augmented Generation）最初于 2020 年提出，作为一种端到端的方案，它结合了预训练的检索器和预</description>
    </item>
    <item>
      <title>LangChain React Agent分析</title>
      <link>http://localhost:1313/posts/langchain-react-agent%E5%88%86%E6%9E%90/</link>
      <pubDate>Sat, 17 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/langchain-react-agent%E5%88%86%E6%9E%90/</guid>
      <description>LangChain 是一个开源库，它旨在使构建和部署与语言模型交互的应用程序变得更加容易。它的核心概念之一是 &amp;ldquo;Agent&amp;rdquo;，可以认为 Agent 是一个抽象层，代表了一个可以执行各种任务的实体。 LangChain 内置了多种</description>
    </item>
  </channel>
</rss>
